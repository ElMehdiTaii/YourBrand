@page "/consultants/{Id}"
@attribute [Authorize]
@using Humanizer
@using YourBrand.Showroom.Consultants.Profile.Experiences
@using YourBrand.Showroom.Consultants.Profile.Skills
@inject IConsultantsClient ConsultantsClient
@inject NavigationManager NavigationManager
@inject IDialogService DialogService
@inject ISnackbar Snackbar

@if (consultant is null)
{
    @if (loadingFailed)
    {
        <MudText Typo="Typo.h3" Class="mb-4">Error when loading profile.</MudText>
    }
    else
    {
        <LoadingIndicator />
    }
}
else
{
    <div class="d-flex justify-center mb-4">
        <ProfileImage ConsultantProfile="consultant" IsEditable="true" />
    </div>
    <div class="d-flex justify-center">
        <MudText Typo="Typo.h3" Align="Align.Center" Class="mb-4">
            @if (!string.IsNullOrEmpty(consultant.DisplayName))
            {@consultant.DisplayName }
        else
        { <text>@consultant.FirstName @consultant.LastName</text>}
        </MudText>
    </div>
    <div class="d-flex justify-center mb-6">
        <HeadlineSection ConsultantProfile="consultant" />
    </div>

    <MudGrid Spacing="3">
        @if (!string.IsNullOrEmpty(consultant.ProfileVideo))
        {
            <MudItem xs="12" sm="12" md="6">

                <MudCard Class="mb-8">
                    <MudCardContent>

                        <video style="width: 100%" controls>
                            <source src="@consultant.ProfileVideo" type="video/mp4">
                            Your browser does not support the video tag.
                        </video>

                    </MudCardContent>
                    <MudCardActions>
                        <MudButton Variant="Variant.Text" Color="Color.Primary">Contact @consultant.FirstName</MudButton>
                    </MudCardActions>
                </MudCard>

            </MudItem>
        }

        <MudItem xs="12" sm="12" md="8">
            <AboutSection ConsultantProfile="consultant" />

            <ExperienceSection ConsultantProfileId="@Id" />

            <div style="page-break-inside: avoid;">
                <SkillsSection ConsultantProfileId="@consultant.Id" />
            </div>
        </MudItem>

        <MudItem xs="12" sm="12" md="4">
            <MudCard>
                <MudCardContent>
                    <div class="d-flex justify-space-between align-center mb-4">
                        <MudText Typo="Typo.h5">
                            Information
                        </MudText>

                        <MudIconButton Icon="@Icons.Material.Filled.Edit" OnClick="UpdateDetails" />
                    </div>

                    <dl class="dl-horizontal">
                        <dt>First Name</dt>
                        <dd>@consultant.FirstName</dd>

                        <dt>Last Name</dt>
                        <dd>@consultant.LastName</dd>

                        @if (!string.IsNullOrEmpty(consultant.DisplayName))
                        {
                            <dt>Display Name</dt>
                            <dd>@consultant.DisplayName</dd>
                        }

                        @if (consultant.BirthDate is not null)
                        {
                            <dt>Birth Date</dt>
                            <dd>@consultant.BirthDate?.ToString("yyyy/MM/dd") (@(Span.Humanize(minUnit: Humanizer.Localisation.TimeUnit.Year, maxUnit: Humanizer.Localisation.TimeUnit.Year, precision: 2)))</dd>
                        }

                        @if (!string.IsNullOrEmpty(consultant.Location))
                        {
                            <dt>Location</dt>
                            <dd>@consultant.Location</dd>
                        }

                        <dt>Organization</dt>
                        <dd>@consultant.Organization.Name</dd>

                        <dt>Competence Area</dt>
                        <dd>@consultant.CompetenceArea.Name</dd>

                        @if (consultant.AvailableFromDate is not null)
                        {
                            <dt>Available</dt>
                            <dd>
                                @if (consultant.AvailableFromDate?.DateTime.Date > DateTime.Now.Date)
                                {
                                    <span>@consultant.AvailableFromDate?.DateTime.Date.ToString("yyyy/MM/dd")</span>
                                }
                                else
                                {
                                    <span>Immediately</span>
                                }
                            </dd>
                        }
                        @if (!string.IsNullOrEmpty(consultant.PhoneNumber))
                        {
                            <dt>Phone</dt>
                            <dd><a href="tel:@consultant.PhoneNumber">@consultant.PhoneNumber</a></dd>
                        }
                        @if (!string.IsNullOrEmpty(consultant.Email))
                        {
                            <dt>Email</dt>
                            <dd><MudLink Href="@("mailto:" + consultant.Email)">@consultant.Email</MudLink></dd>
                        }
                    </dl>
                </MudCardContent>
            </MudCard>
        </MudItem>
    </MudGrid>
}

@code {
    private ConsultantProfileDto? consultant;
    private bool loadingFailed = false;

    [Parameter]
    public string Id { get; set; } = null!;

    public TimeSpan Span => DateTime.Now - consultant!.BirthDate.GetValueOrDefault();

    protected override async Task OnInitializedAsync()
    {
        loadingFailed = false;

        try
        {
            consultant = await ConsultantsClient.GetConsultantAsync(Id);
        }
        /*catch (ApiException exc)
        {
        }
        catch (HttpRequestException exc)
        {
        }*/
        catch (Exception exc)
        {
            loadingFailed = true;
            //await JSHelpers.Alert(exc.Message);
        }

        StateHasChanged();
    }

    private async Task UpdateDetails()
    {
        var parameters = new DialogParameters();
        parameters.Add(nameof(DetailsDialog.ConsultantProfile), consultant);

        var dialogReference = DialogService.Show<DetailsDialog>("Update details", parameters);
        var result = await dialogReference.Result;

        if (result.Cancelled)
            return;

        Snackbar.Add("Details updated.", Severity.Success);
    }
}
