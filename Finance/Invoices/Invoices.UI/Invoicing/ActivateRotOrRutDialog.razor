@using System.ComponentModel.DataAnnotations
@inject IInvoicesClient InvoicesClient

<EditForm Model="@this" OnValidSubmit="Submit">
    <DataAnnotationsValidator />

    <MudDialog>
        <DialogContent>

            <MudRadioGroup @bind-SelectedOption="Kind" Class="mt-4">
                <MudRadio Option="DomesticServiceKind.HomeRepairAndMaintenanceServiceType" Dense="true">ROT</MudRadio>
                <MudRadio Option="DomesticServiceKind.HouseholdService" Dense="false">RUT</MudRadio>
            </MudRadioGroup>

            <MudTextField Label="Description" @bind-Value="Description" For="() => Description" Lines="5"></MudTextField>

            <MudTextField Label="Buyer" @bind-Value="Buyer" For="() => Buyer"></MudTextField>

        </DialogContent>
        <DialogActions>
            <MudButton OnClick="Cancel" Variant="Variant.Text">Cancel</MudButton>
            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Text">Ok</MudButton>
        </DialogActions>
    </MudDialog>
</EditForm>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter] public int InvoiceId { get; set; }

    public DomesticServiceKind Kind { get; set; }

    [Required]
    public string Description { get; set; } = null!;

    [Required]
    public string Buyer { get; set; } = null!;

    [Parameter] public InvoiceDomesticServiceDto? InvoiceDomesticService { get; set; }

    protected override void OnInitialized()
    {
        if(InvoiceDomesticService is not null) 
        {
            Kind = InvoiceDomesticService.Kind;
            Description = InvoiceDomesticService.Description;
        }
    }

    async Task Submit()
    {
        var dto = new InvoiceDomesticServiceDto {
            Kind = Kind,
            Description = Description,
            Buyer = Buyer
        };

        await InvoicesClient.ActivateRotAndRutAsync(InvoiceId, dto);

        MudDialog.Close(DialogResult.Ok(dto));
    }

    void Cancel() => MudDialog.Cancel();
}