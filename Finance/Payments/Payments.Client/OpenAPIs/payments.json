{
  "x-generator": "NSwag v13.17.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))",
  "swagger": "2.0",
  "info": {
    "title": "Payments API",
    "version": "0.1"
  },
  "host": "localhost:5095",
  "schemes": [
    "https"
  ],
  "paths": {
    "/": {
      "get": {
        "operationId": "Get",
        "produces": [
          "text/plain"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Payments": {
      "post": {
        "tags": [
          "Payments"
        ],
        "operationId": "Payments_CreatePayment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "payment",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreatePayment"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Unit"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Payments"
        ],
        "operationId": "Payments_GetPayments",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "page",
            "in": "query",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "pageSize",
            "in": "query",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "array",
            "name": "status",
            "in": "query",
            "collectionFormat": "multi",
            "x-nullable": true,
            "items": {
              "$ref": "#/definitions/PaymentStatus"
            }
          },
          {
            "type": "string",
            "name": "invoiceId",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ItemsResultOfPaymentDto"
            }
          }
        }
      }
    },
    "/Payments/{paymentId}": {
      "get": {
        "tags": [
          "Payments"
        ],
        "operationId": "Payments_GetPaymentById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "paymentId",
            "in": "path",
            "required": true,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PaymentDto"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Payments"
        ],
        "operationId": "Payments_CancelPayment",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "paymentId",
            "in": "path",
            "required": true,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Unit"
            }
          }
        }
      }
    },
    "/Payments/GetPaymentByReference/{reference}": {
      "get": {
        "tags": [
          "Payments"
        ],
        "operationId": "Payments_GetPaymentByReference",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "reference",
            "in": "path",
            "required": true,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PaymentDto"
            }
          }
        }
      }
    },
    "/Payments/{paymentId}/Status": {
      "put": {
        "tags": [
          "Payments"
        ],
        "operationId": "Payments_SetPaymentStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "paymentId",
            "in": "path",
            "required": true,
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "status",
            "in": "query",
            "required": true,
            "x-schema": {
              "$ref": "#/definitions/PaymentStatus"
            },
            "x-nullable": false,
            "enum": [
              "Created",
              "Captured",
              "PartiallyCaptured",
              "Refunded",
              "PartiallyRefunded",
              "Cancelled"
            ]
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Unit"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Unit": {
      "type": "object",
      "description": "Represents a void type, since Void is not a valid return type in C#."
    },
    "CreatePayment": {
      "type": "object",
      "required": [
        "invoiceId",
        "currency",
        "amount",
        "dueDate",
        "paymentMethod"
      ],
      "properties": {
        "invoiceId": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "amount": {
          "type": "number",
          "format": "decimal"
        },
        "dueDate": {
          "type": "string",
          "format": "date-time"
        },
        "paymentMethod": {
          "$ref": "#/definitions/PaymentMethod"
        },
        "reference": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "PaymentMethod": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "PlusGiro"
      ],
      "enum": [
        "PlusGiro"
      ]
    },
    "PaymentDto": {
      "type": "object",
      "required": [
        "invoiceId",
        "status",
        "currency",
        "amount",
        "dueDate",
        "paymentMethod"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "invoiceId": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/PaymentStatus"
        },
        "currency": {
          "type": "string"
        },
        "amount": {
          "type": "number",
          "format": "decimal"
        },
        "dueDate": {
          "type": "string",
          "format": "date-time"
        },
        "paymentMethod": {
          "$ref": "#/definitions/PaymentMethod"
        },
        "reference": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "amountCaptured": {
          "type": "number",
          "format": "decimal"
        }
      }
    },
    "PaymentStatus": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Created",
        "Captured",
        "PartiallyCaptured",
        "Refunded",
        "PartiallyRefunded",
        "Cancelled"
      ],
      "enum": [
        "Created",
        "Captured",
        "PartiallyCaptured",
        "Refunded",
        "PartiallyRefunded",
        "Cancelled"
      ]
    },
    "ItemsResultOfPaymentDto": {
      "type": "object",
      "required": [
        "items",
        "totalItems"
      ],
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentDto"
          }
        },
        "totalItems": {
          "type": "integer",
          "format": "int32"
        }
      }
    }
  }
}