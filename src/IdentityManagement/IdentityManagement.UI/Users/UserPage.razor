@page "/usermanagement/users/{userId}"
@attribute [Authorize]
@using YourBrand.Portal
@inject NavigationManager NavigationManager
@inject IDialogService DialogService
@inject YourBrand.IdentityManagement.Client.IUsersClient UsersClient

@if (user is null)
{
    <LoadingIndicator />
}
else 
{
    <AppPageTitle>@user.GetDisplayName() - YourBrand</AppPageTitle>

    <MudText Typo="Typo.h3" GutterBottom="true">@user.GetDisplayName()</MudText>

    <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Edit" IconColor="Color.Default" Class="me-2" OnClick="ChangeUserDetails">Edit details</MudButton>
    @* <MudButton Variant="Variant.Filled" OnClick="ChangePassword">Change password</MudButton> *@
}

@code {
    bool isLoading = false;
    IdentityManagement.Client.User user;

    [Parameter] public string UserId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            user = await UsersClient.GetUserAsync(UserId);
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }

    async Task ChangeUserDetails()
    {
        NavigationManager.NavigateTo($"/usermanagement/users/{user.Id}/edit");
    }
}

