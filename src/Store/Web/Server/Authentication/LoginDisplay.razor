@using Microsoft.AspNetCore.Identity
@implements IDisposable

@inject NavigationManager NavigationManager

<AuthorizeView>
    <Authorized>
        <li class="nav-item col-12 col-md-auto">
            <a class="nav-link" href="/authentication/profile">Hello, @context.User.Identity?.Name!</a>
        </li>

        <li class="nav-item col-12 col-md-auto">
            <form action="authentication/logout" method="post">
                <AntiforgeryToken />
                <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                <button type="submit" class="nav-link">
                    <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Logout
                    @context.User.Identity?.Name
                </button>
            </form>
        </li>
    </Authorized>
    <NotAuthorized>
        <li class="nav-item col-12 col-md-auto">
            <a class="nav-link" href="/authentication/register">Register</a>              
        </li>

        <li class="nav-item col-12 col-md-auto">
            <a class="nav-link" href="/authentication/login">Log in</a>
        </li>
    </NotAuthorized>
</AuthorizeView>



@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}