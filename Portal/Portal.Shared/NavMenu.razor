@using System.Runtime.CompilerServices
@using Navigation
@inject NavManager NavManager
@inject IStringLocalizer<NavMenu> T
@inject Blazored.LocalStorage.ISyncLocalStorageService LocalStorageService
@implements IDisposable

<MudNavMenu>
    <MudSpacer />

    @foreach (var navGroup in NavManager.Groups)
    {
        @if (navGroup.Visible)
        {
            if(navGroup.RequiresAuthorization) 
            {
                <AuthorizeView Roles="@navGroup.Roles">
                    <NavGroupView NavGroup="navGroup" SaveCallback="Save" />
                </AuthorizeView>
            }
            else 
            {
                <NavGroupView NavGroup="navGroup" SaveCallback="Save" />
            }
        }
    }
</MudNavMenu>

@code {
    protected override void OnInitialized()
    {
        foreach (var navGroup in NavManager.Groups)
        {
            navGroup.Expanded = LocalStorageService.GetItem<bool>($"navmenu.{navGroup.Id.ToLower()}");
        }

        NavManager.Updated += NavManagerUpdate;
    }

    public void NavManagerUpdate(object? sender, EventArgs eventArgs)
    {
        StateHasChanged();
    }

    public void Dispose()
    {
        NavManager.Updated -= NavManagerUpdate;
    }

    bool Save(bool newValue, NavGroup navGroup)
    {
        LocalStorageService.SetItem($"navmenu.{navGroup.Id}", newValue);
        navGroup.Expanded = newValue;
        return newValue;
    }
}